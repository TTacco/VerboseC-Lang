package TokenLibrary;

public enum TokenTypes {
    BEGIN_PROGRAM,
    PROGRAM_NAME,
    ID,
    BLOCKSTART,
    BLOCKEND,
    END_PROGRAM,
    COND_CONSIDER,
    LBRACKET,
    RBRACKET,
    COND_OTHERW,
    LOOP_REPEAT,
    ENDLINE,
    ASSIGN_OP,
    SET_SAY,
    STRINGLITERAL,
    GET_LISTEN,
    LOGICALOP,
    RELOP,
    ADDSUB_AROP,
    MULDIV_AROP,
    INDEC_OP,
    NUMCONSTANTS,
    BOOLLITERAL,
    LETTERLITERAL,
    DATA_TYPE,
    DOLLAR,

    //26
    WHITESPACE,
    SINGLECOMMENT,
    MULTICOMMENT,
    NEWLINE,
    ERROR,
    SEPARATOR_ID,

    //32
    //Non Terminals
    VAR_KEYWORDBEGIN, //32 - 32 = 0
    VAR_PROGRAMBODY, //33 - 32 = 1;
    VAR_STATEMENTS, //34
    VAR_STATEMENT, //35
    VAR_CONDITIONALSTATEMENT, //36
    VAR_REPEATSTATEMENT, //37
    VAR_VARIABLEDECLARATION, //38
    VAR_ASSIGNMENTEXPRESSION, //39
    VAR_IOSTATEMENT, //40
    VAR_SAYSTATEMENT, //41
    VAR_LISTENSTATEMENT, //42
    VAR_EXPRESSIONSTATEMENT, //43
    VAR_EXPRESSION, //44
    VAR_LOGICALEXPRESSION, //45
    VAR_RELATIONALEXPRESSION, //46
    VAR_ADDSUBEXPRESSION, //47
    VAR_MULDIVEXPRESSION,//48
    VAR_NESTEDEXPRESSION, //49
    VAR_UNARYEXPRESSION, //50
    VAR_UNARYOPERATOR,//51
    VAR_VALUE //52 - 32 = 20
}
/*
BEGIN_PROGRAM,
    PROGRAM_NAME,
    END_PROGRAM,
    ID,
    COND_CONSIDER,
    COND_OTHERW,
    LOOP_REPEAT,
    SET_SAY,
    GET_LISTEN,
    LBRACKET,
    RBRACKET,
    BLOCKSTART,
    BLOCKEND,
    INDEC_OP,
    DATA_TYPE,

    //***Data Types***
    //INT_DT,
    //LOG_DT,
    //DECIMAL_DT,
    //SENTENCE_DT,
    //LETTER_DT,
    //CONST_INT_DT,
    //CONST_LOG_DT,
    //CONST_DEC_DT,
    //CONST_SENT_DT,
    //CONST_LETTER_DT,

    //***RELATIONAL OPERATORS***
    MULDIV_AROP,
    ADDSUB_AROP,
    RELOP,
    LOGICALOP,
    ASSIGN_OP,

    ENDLINE,
    SEPARATOR_ID,

    LETTER_SMBL,
    STRINGLIT_SMBL,
    STRINGLITERAL,
    NUMCONSTANTS,
    SINGCOMM_SMBL,
    BOOLLITERAL,
    LETTERLITERAL,


    SINGLECOMMENT,
    MULTICOMM_SMBL,
    MULTICOMMENT,
    SPACETAB,
    TAB,
    NEWLINE,
    WHITESPACE,
    ERROR,

    DOLLAR,
 */